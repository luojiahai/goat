GoatProgram [Procedure "main" [] [Decl (Ident "a") IntType,Decl (IdentWithShape "b" [IntConst 50]) IntType,Decl (IdentWithShape "c" [IntConst 100,IntConst 2]) FloatType,Decl (IdentWithShape "d" [IntConst 23]) BoolType] [Assign (LId (Ident "newstates")) (Id (IdentWithShape "something" [Id (IdentWithShape "ab" [Id (Ident "cd"),Id (Ident "ef")])])),Assign (LId (IdentWithShape "new" [Id (Ident "hello")])) (BinExpr Subtract (BinExpr Add (BinExpr Multiply (IntConst 6) (Id (Ident "i"))) (IntConst 4)) (Id (Ident "i"))),Read (LId (IdentWithShape "yes" [Id (IdentWithShape "May" [Id (Ident "the"),Id (Ident "force")])])),While (BinExpr Add (Id (Ident "a")) (BinExpr Divide (Id (Ident "a")) (Id (Ident "b")))) [IfThenElse (Id (IdentWithShape "newew" [BoolConst False])) [Read (LId (Ident "ss")),Read (LId (Ident "ff"))] [Call "a" [StrConst "if then' else",StrConst "1234",BinExpr Or (IntConst 2) (BinExpr Subtract (BinExpr Divide (BinExpr Multiply (IntConst 3) (IntConst 4)) (BinExpr Add (IntConst 5) (IntConst 6))) (IntConst 7)),UnExpr Negative (IntConst 1),BinExpr GreaterEqual (IntConst 7) (IntConst 2),UnExpr Not (Id (Ident "True")),Id (IdentWithShape "hey" [Id (Ident "yes")])]]]]]
proc main ()
    int a;
    int b[50];
    float c[100, 2];
    bool d[23];
begin
    newstates := something[ab[cd, ef]];
    new[hello] := ((6 * i) + 4) - i;
    read yes[May[the, force]];
    while a + (a / b) do
        if newew[false] then
            read ss;
            read ff;
        else
            call a("if then' else", "1234", 2 || (((3 * 4) / (5 + 6)) - 7), -1, 7 >= 2, !True, hey[yes]);
        fi
    od
end
